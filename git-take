#!/usr/bin/env bash

# git-take

set -eu

__usage() {
  echo "usage: git take [branch] [file]"
  echo
  echo "Arguments:"
  echo
  echo "   branch     Optional, uses branch from previous git take if not provided."
  echo "              If no last branch in git config, the command will fail."
  echo "   file       File to get from the branch"
  echo
  echo "Example usage:"
  echo
  echo "   $ git take staging stagingfile.txt"
  echo
  echo "is equivalent to"
  echo
  echo "   $ git checkout staging stagingfile.txt"
  echo
  echo "But now you can do this with no branch name and it will assume you're still"
  echo "checking out from the staging branch:"
  echo
  echo "   $ git take stagingfile2.txt"
  echo
}

# $1 branch name
__branch_exists() {
  if [ -z "$1" ]; then
    echo "ERROR: Please provide a branch as the first param."
    echo
    __usage
    exit 1
  fi

  # verify branch exists
  if ! git rev-parse --verify "$1" >/dev/null 2>&1; then
    echo "ERROR: Branch $1 doesn't exist!"
    echo
    __usage
    exit 1
  fi
}

__has_args() {
  if [ "$#" -eq 0 ]; then
    echo "ERROR: Please provide a branch and/or files to get from that branch."
    echo
    __usage
    exit 1
  fi
}

__has_args "$@"

from_branch=""
if [ "$#" -ne 1 ]; then
  from_branch=$1
  filename=$2
else
  from_branch="$(git config --get take.branch)"
  filename=$1
fi

__branch_exists "$from_branch"

# store for repeat use
git config take.branch "$from_branch"

# do it
git checkout "$from_branch" "$filename"

